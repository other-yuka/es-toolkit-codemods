// This file is auto-generated. Do not edit manually.
// Generated from es-toolkit version 1.38.0

import type { CompatibilityMapping } from '../types';

export const compatibilityMap = {
  AbortError: { module: 'es-toolkit', name: 'AbortError' },
  Mutex: { module: 'es-toolkit', name: 'Mutex' },
  Semaphore: { module: 'es-toolkit', name: 'Semaphore' },
  TimeoutError: { module: 'es-toolkit', name: 'TimeoutError' },
  after: { module: 'es-toolkit', name: 'after' },
  ary: { module: 'es-toolkit', name: 'ary' },
  assert: { module: 'es-toolkit', name: 'assert' },
  asyncNoop: { module: 'es-toolkit', name: 'asyncNoop' },
  at: { module: 'es-toolkit', name: 'at' },
  attempt: { module: 'es-toolkit', name: 'attempt' },
  attemptAsync: { module: 'es-toolkit', name: 'attemptAsync' },
  before: { module: 'es-toolkit', name: 'before' },
  camelCase: { module: 'es-toolkit', name: 'camelCase' },
  capitalize: { module: 'es-toolkit', name: 'capitalize' },
  chunk: { module: 'es-toolkit', name: 'chunk' },
  clamp: { module: 'es-toolkit', name: 'clamp' },
  clone: { module: 'es-toolkit', name: 'clone' },
  cloneDeep: { module: 'es-toolkit', name: 'cloneDeep' },
  cloneDeepWith: { module: 'es-toolkit', name: 'cloneDeepWith' },
  compact: { module: 'es-toolkit', name: 'compact' },
  constantCase: { module: 'es-toolkit', name: 'constantCase' },
  countBy: { module: 'es-toolkit', name: 'countBy' },
  curry: { module: 'es-toolkit', name: 'curry' },
  curryRight: { module: 'es-toolkit', name: 'curryRight' },
  debounce: { module: 'es-toolkit', name: 'debounce' },
  deburr: { module: 'es-toolkit', name: 'deburr' },
  delay: { module: 'es-toolkit', name: 'delay' },
  difference: { module: 'es-toolkit', name: 'difference' },
  differenceBy: { module: 'es-toolkit', name: 'differenceBy' },
  differenceWith: { module: 'es-toolkit', name: 'differenceWith' },
  drop: { module: 'es-toolkit', name: 'drop' },
  dropRight: { module: 'es-toolkit', name: 'dropRight' },
  dropRightWhile: { module: 'es-toolkit', name: 'dropRightWhile' },
  dropWhile: { module: 'es-toolkit', name: 'dropWhile' },
  escape: { module: 'es-toolkit', name: 'escape' },
  escapeRegExp: { module: 'es-toolkit', name: 'escapeRegExp' },
  fill: { module: 'es-toolkit', name: 'fill' },
  findKey: { module: 'es-toolkit', name: 'findKey' },
  flatMap: { module: 'es-toolkit', name: 'flatMap' },
  flatMapDeep: { module: 'es-toolkit', name: 'flatMapDeep' },
  flatten: { module: 'es-toolkit', name: 'flatten' },
  flattenDeep: { module: 'es-toolkit', name: 'flattenDeep' },
  flattenObject: { module: 'es-toolkit', name: 'flattenObject' },
  flow: { module: 'es-toolkit', name: 'flow' },
  flowRight: { module: 'es-toolkit', name: 'flowRight' },
  forEachRight: { module: 'es-toolkit', name: 'forEachRight' },
  groupBy: { module: 'es-toolkit', name: 'groupBy' },
  head: { module: 'es-toolkit', name: 'head' },
  identity: { module: 'es-toolkit', name: 'identity' },
  inRange: { module: 'es-toolkit', name: 'inRange' },
  initial: { module: 'es-toolkit', name: 'initial' },
  intersection: { module: 'es-toolkit', name: 'intersection' },
  intersectionBy: { module: 'es-toolkit', name: 'intersectionBy' },
  intersectionWith: { module: 'es-toolkit', name: 'intersectionWith' },
  invariant: { module: 'es-toolkit', name: 'invariant' },
  invert: { module: 'es-toolkit', name: 'invert' },
  isArrayBuffer: { module: 'es-toolkit', name: 'isArrayBuffer' },
  isBlob: { module: 'es-toolkit', name: 'isBlob' },
  isBoolean: { module: 'es-toolkit', name: 'isBoolean' },
  isBrowser: { module: 'es-toolkit', name: 'isBrowser' },
  isBuffer: { module: 'es-toolkit', name: 'isBuffer' },
  isDate: { module: 'es-toolkit', name: 'isDate' },
  isEqual: { module: 'es-toolkit', name: 'isEqual' },
  isEqualWith: { module: 'es-toolkit', name: 'isEqualWith' },
  isError: { module: 'es-toolkit', name: 'isError' },
  isFile: { module: 'es-toolkit', name: 'isFile' },
  isFunction: { module: 'es-toolkit', name: 'isFunction' },
  isJSON: { module: 'es-toolkit', name: 'isJSON' },
  isJSONArray: { module: 'es-toolkit', name: 'isJSONArray' },
  isJSONObject: { module: 'es-toolkit', name: 'isJSONObject' },
  isJSONValue: { module: 'es-toolkit', name: 'isJSONValue' },
  isLength: { module: 'es-toolkit', name: 'isLength' },
  isMap: { module: 'es-toolkit', name: 'isMap' },
  isNil: { module: 'es-toolkit', name: 'isNil' },
  isNode: { module: 'es-toolkit', name: 'isNode' },
  isNotNil: { module: 'es-toolkit', name: 'isNotNil' },
  isNull: { module: 'es-toolkit', name: 'isNull' },
  isPlainObject: { module: 'es-toolkit', name: 'isPlainObject' },
  isPrimitive: { module: 'es-toolkit', name: 'isPrimitive' },
  isPromise: { module: 'es-toolkit', name: 'isPromise' },
  isRegExp: { module: 'es-toolkit', name: 'isRegExp' },
  isSet: { module: 'es-toolkit', name: 'isSet' },
  isString: { module: 'es-toolkit', name: 'isString' },
  isSubset: { module: 'es-toolkit', name: 'isSubset' },
  isSubsetWith: { module: 'es-toolkit', name: 'isSubsetWith' },
  isSymbol: { module: 'es-toolkit', name: 'isSymbol' },
  isTypedArray: { module: 'es-toolkit', name: 'isTypedArray' },
  isUndefined: { module: 'es-toolkit', name: 'isUndefined' },
  isWeakMap: { module: 'es-toolkit', name: 'isWeakMap' },
  isWeakSet: { module: 'es-toolkit', name: 'isWeakSet' },
  kebabCase: { module: 'es-toolkit', name: 'kebabCase' },
  keyBy: { module: 'es-toolkit', name: 'keyBy' },
  last: { module: 'es-toolkit', name: 'last' },
  lowerCase: { module: 'es-toolkit', name: 'lowerCase' },
  lowerFirst: { module: 'es-toolkit', name: 'lowerFirst' },
  mapKeys: { module: 'es-toolkit', name: 'mapKeys' },
  mapValues: { module: 'es-toolkit', name: 'mapValues' },
  maxBy: { module: 'es-toolkit', name: 'maxBy' },
  mean: { module: 'es-toolkit', name: 'mean' },
  meanBy: { module: 'es-toolkit', name: 'meanBy' },
  median: { module: 'es-toolkit', name: 'median' },
  medianBy: { module: 'es-toolkit', name: 'medianBy' },
  memoize: { module: 'es-toolkit', name: 'memoize' },
  merge: { module: 'es-toolkit', name: 'merge' },
  mergeWith: { module: 'es-toolkit', name: 'mergeWith' },
  minBy: { module: 'es-toolkit', name: 'minBy' },
  negate: { module: 'es-toolkit', name: 'negate' },
  noop: { module: 'es-toolkit', name: 'noop' },
  omit: { module: 'es-toolkit', name: 'omit' },
  omitBy: { module: 'es-toolkit', name: 'omitBy' },
  once: { module: 'es-toolkit', name: 'once' },
  orderBy: { module: 'es-toolkit', name: 'orderBy' },
  pad: { module: 'es-toolkit', name: 'pad' },
  partial: { module: 'es-toolkit', name: 'partial' },
  partialRight: { module: 'es-toolkit', name: 'partialRight' },
  partition: { module: 'es-toolkit', name: 'partition' },
  pascalCase: { module: 'es-toolkit', name: 'pascalCase' },
  pick: { module: 'es-toolkit', name: 'pick' },
  pickBy: { module: 'es-toolkit', name: 'pickBy' },
  pull: { module: 'es-toolkit', name: 'pull' },
  pullAt: { module: 'es-toolkit', name: 'pullAt' },
  random: { module: 'es-toolkit', name: 'random' },
  randomInt: { module: 'es-toolkit', name: 'randomInt' },
  range: { module: 'es-toolkit', name: 'range' },
  rangeRight: { module: 'es-toolkit', name: 'rangeRight' },
  remove: { module: 'es-toolkit', name: 'remove' },
  rest: { module: 'es-toolkit', name: 'rest' },
  retry: { module: 'es-toolkit', name: 'retry' },
  reverseString: { module: 'es-toolkit', name: 'reverseString' },
  round: { module: 'es-toolkit', name: 'round' },
  sample: { module: 'es-toolkit', name: 'sample' },
  sampleSize: { module: 'es-toolkit', name: 'sampleSize' },
  shuffle: { module: 'es-toolkit', name: 'shuffle' },
  snakeCase: { module: 'es-toolkit', name: 'snakeCase' },
  sortBy: { module: 'es-toolkit', name: 'sortBy' },
  spread: { module: 'es-toolkit', name: 'spread' },
  startCase: { module: 'es-toolkit', name: 'startCase' },
  sum: { module: 'es-toolkit', name: 'sum' },
  sumBy: { module: 'es-toolkit', name: 'sumBy' },
  tail: { module: 'es-toolkit', name: 'tail' },
  take: { module: 'es-toolkit', name: 'take' },
  takeRight: { module: 'es-toolkit', name: 'takeRight' },
  takeRightWhile: { module: 'es-toolkit', name: 'takeRightWhile' },
  takeWhile: { module: 'es-toolkit', name: 'takeWhile' },
  throttle: { module: 'es-toolkit', name: 'throttle' },
  timeout: { module: 'es-toolkit', name: 'timeout' },
  toCamelCaseKeys: { module: 'es-toolkit', name: 'toCamelCaseKeys' },
  toFilled: { module: 'es-toolkit', name: 'toFilled' },
  toMerged: { module: 'es-toolkit', name: 'toMerged' },
  toSnakeCaseKeys: { module: 'es-toolkit', name: 'toSnakeCaseKeys' },
  trim: { module: 'es-toolkit', name: 'trim' },
  trimEnd: { module: 'es-toolkit', name: 'trimEnd' },
  trimStart: { module: 'es-toolkit', name: 'trimStart' },
  unary: { module: 'es-toolkit', name: 'unary' },
  unescape: { module: 'es-toolkit', name: 'unescape' },
  union: { module: 'es-toolkit', name: 'union' },
  unionBy: { module: 'es-toolkit', name: 'unionBy' },
  unionWith: { module: 'es-toolkit', name: 'unionWith' },
  uniq: { module: 'es-toolkit', name: 'uniq' },
  uniqBy: { module: 'es-toolkit', name: 'uniqBy' },
  uniqWith: { module: 'es-toolkit', name: 'uniqWith' },
  unzip: { module: 'es-toolkit', name: 'unzip' },
  unzipWith: { module: 'es-toolkit', name: 'unzipWith' },
  upperCase: { module: 'es-toolkit', name: 'upperCase' },
  upperFirst: { module: 'es-toolkit', name: 'upperFirst' },
  windowed: { module: 'es-toolkit', name: 'windowed' },
  withTimeout: { module: 'es-toolkit', name: 'withTimeout' },
  without: { module: 'es-toolkit', name: 'without' },
  words: { module: 'es-toolkit', name: 'words' },
  xor: { module: 'es-toolkit', name: 'xor' },
  xorBy: { module: 'es-toolkit', name: 'xorBy' },
  xorWith: { module: 'es-toolkit', name: 'xorWith' },
  zip: { module: 'es-toolkit', name: 'zip' },
  zipObject: { module: 'es-toolkit', name: 'zipObject' },
  zipWith: { module: 'es-toolkit', name: 'zipWith' },
  add: { module: 'es-toolkit/compat', name: 'add' },
  assign: { module: 'es-toolkit/compat', name: 'assign' },
  assignIn: { module: 'es-toolkit/compat', name: 'assignIn' },
  assignInWith: { module: 'es-toolkit/compat', name: 'assignInWith' },
  assignWith: { module: 'es-toolkit/compat', name: 'assignWith' },
  bind: { module: 'es-toolkit/compat', name: 'bind' },
  bindAll: { module: 'es-toolkit/compat', name: 'bindAll' },
  bindKey: { module: 'es-toolkit/compat', name: 'bindKey' },
  castArray: { module: 'es-toolkit/compat', name: 'castArray' },
  ceil: { module: 'es-toolkit/compat', name: 'ceil' },
  cloneWith: { module: 'es-toolkit/compat', name: 'cloneWith' },
  concat: { module: 'es-toolkit/compat', name: 'concat' },
  cond: { module: 'es-toolkit/compat', name: 'cond' },
  conforms: { module: 'es-toolkit/compat', name: 'conforms' },
  conformsTo: { module: 'es-toolkit/compat', name: 'conformsTo' },
  constant: { module: 'es-toolkit/compat', name: 'constant' },
  create: { module: 'es-toolkit/compat', name: 'create' },
  default: { module: 'es-toolkit/compat', name: 'default' },
  defaultTo: { module: 'es-toolkit/compat', name: 'defaultTo' },
  defaults: { module: 'es-toolkit/compat', name: 'defaults' },
  defer: { module: 'es-toolkit/compat', name: 'defer' },
  divide: { module: 'es-toolkit/compat', name: 'divide' },
  each: { module: 'es-toolkit/compat', name: 'each' },
  eachRight: { module: 'es-toolkit/compat', name: 'eachRight' },
  endsWith: { module: 'es-toolkit/compat', name: 'endsWith' },
  eq: { module: 'es-toolkit/compat', name: 'eq' },
  every: { module: 'es-toolkit/compat', name: 'every' },
  extend: { module: 'es-toolkit/compat', name: 'extend' },
  extendWith: { module: 'es-toolkit/compat', name: 'extendWith' },
  filter: { module: 'es-toolkit/compat', name: 'filter' },
  find: { module: 'es-toolkit/compat', name: 'find' },
  findIndex: { module: 'es-toolkit/compat', name: 'findIndex' },
  findLast: { module: 'es-toolkit/compat', name: 'findLast' },
  findLastIndex: { module: 'es-toolkit/compat', name: 'findLastIndex' },
  first: { module: 'es-toolkit/compat', name: 'first' },
  flattenDepth: { module: 'es-toolkit/compat', name: 'flattenDepth' },
  flip: { module: 'es-toolkit/compat', name: 'flip' },
  floor: { module: 'es-toolkit/compat', name: 'floor' },
  forEach: { module: 'es-toolkit/compat', name: 'forEach' },
  forIn: { module: 'es-toolkit/compat', name: 'forIn' },
  forInRight: { module: 'es-toolkit/compat', name: 'forInRight' },
  forOwn: { module: 'es-toolkit/compat', name: 'forOwn' },
  forOwnRight: { module: 'es-toolkit/compat', name: 'forOwnRight' },
  fromPairs: { module: 'es-toolkit/compat', name: 'fromPairs' },
  functions: { module: 'es-toolkit/compat', name: 'functions' },
  functionsIn: { module: 'es-toolkit/compat', name: 'functionsIn' },
  get: { module: 'es-toolkit/compat', name: 'get' },
  gt: { module: 'es-toolkit/compat', name: 'gt' },
  gte: { module: 'es-toolkit/compat', name: 'gte' },
  has: { module: 'es-toolkit/compat', name: 'has' },
  hasIn: { module: 'es-toolkit/compat', name: 'hasIn' },
  includes: { module: 'es-toolkit/compat', name: 'includes' },
  indexOf: { module: 'es-toolkit/compat', name: 'indexOf' },
  invertBy: { module: 'es-toolkit/compat', name: 'invertBy' },
  invoke: { module: 'es-toolkit/compat', name: 'invoke' },
  invokeMap: { module: 'es-toolkit/compat', name: 'invokeMap' },
  isArguments: { module: 'es-toolkit/compat', name: 'isArguments' },
  isArray: { module: 'es-toolkit/compat', name: 'isArray' },
  isArrayLike: { module: 'es-toolkit/compat', name: 'isArrayLike' },
  isArrayLikeObject: { module: 'es-toolkit/compat', name: 'isArrayLikeObject' },
  isElement: { module: 'es-toolkit/compat', name: 'isElement' },
  isEmpty: { module: 'es-toolkit/compat', name: 'isEmpty' },
  isFinite: { module: 'es-toolkit/compat', name: 'isFinite' },
  isInteger: { module: 'es-toolkit/compat', name: 'isInteger' },
  isMatch: { module: 'es-toolkit/compat', name: 'isMatch' },
  isNaN: { module: 'es-toolkit/compat', name: 'isNaN' },
  isNative: { module: 'es-toolkit/compat', name: 'isNative' },
  isNumber: { module: 'es-toolkit/compat', name: 'isNumber' },
  isObject: { module: 'es-toolkit/compat', name: 'isObject' },
  isObjectLike: { module: 'es-toolkit/compat', name: 'isObjectLike' },
  isSafeInteger: { module: 'es-toolkit/compat', name: 'isSafeInteger' },
  iteratee: { module: 'es-toolkit/compat', name: 'iteratee' },
  join: { module: 'es-toolkit/compat', name: 'join' },
  keys: { module: 'es-toolkit/compat', name: 'keys' },
  keysIn: { module: 'es-toolkit/compat', name: 'keysIn' },
  lastIndexOf: { module: 'es-toolkit/compat', name: 'lastIndexOf' },
  lt: { module: 'es-toolkit/compat', name: 'lt' },
  lte: { module: 'es-toolkit/compat', name: 'lte' },
  map: { module: 'es-toolkit/compat', name: 'map' },
  matches: { module: 'es-toolkit/compat', name: 'matches' },
  matchesProperty: { module: 'es-toolkit/compat', name: 'matchesProperty' },
  max: { module: 'es-toolkit/compat', name: 'max' },
  method: { module: 'es-toolkit/compat', name: 'method' },
  methodOf: { module: 'es-toolkit/compat', name: 'methodOf' },
  min: { module: 'es-toolkit/compat', name: 'min' },
  multiply: { module: 'es-toolkit/compat', name: 'multiply' },
  now: { module: 'es-toolkit/compat', name: 'now' },
  nth: { module: 'es-toolkit/compat', name: 'nth' },
  nthArg: { module: 'es-toolkit/compat', name: 'nthArg' },
  over: { module: 'es-toolkit/compat', name: 'over' },
  overEvery: { module: 'es-toolkit/compat', name: 'overEvery' },
  overSome: { module: 'es-toolkit/compat', name: 'overSome' },
  padEnd: { module: 'es-toolkit/compat', name: 'padEnd' },
  padStart: { module: 'es-toolkit/compat', name: 'padStart' },
  parseInt: { module: 'es-toolkit/compat', name: 'parseInt' },
  property: { module: 'es-toolkit/compat', name: 'property' },
  propertyOf: { module: 'es-toolkit/compat', name: 'propertyOf' },
  pullAll: { module: 'es-toolkit/compat', name: 'pullAll' },
  pullAllBy: { module: 'es-toolkit/compat', name: 'pullAllBy' },
  pullAllWith: { module: 'es-toolkit/compat', name: 'pullAllWith' },
  rearg: { module: 'es-toolkit/compat', name: 'rearg' },
  reduce: { module: 'es-toolkit/compat', name: 'reduce' },
  reduceRight: { module: 'es-toolkit/compat', name: 'reduceRight' },
  reject: { module: 'es-toolkit/compat', name: 'reject' },
  repeat: { module: 'es-toolkit/compat', name: 'repeat' },
  replace: { module: 'es-toolkit/compat', name: 'replace' },
  result: { module: 'es-toolkit/compat', name: 'result' },
  reverse: { module: 'es-toolkit/compat', name: 'reverse' },
  set: { module: 'es-toolkit/compat', name: 'set' },
  setWith: { module: 'es-toolkit/compat', name: 'setWith' },
  size: { module: 'es-toolkit/compat', name: 'size' },
  slice: { module: 'es-toolkit/compat', name: 'slice' },
  some: { module: 'es-toolkit/compat', name: 'some' },
  sortedIndex: { module: 'es-toolkit/compat', name: 'sortedIndex' },
  sortedIndexBy: { module: 'es-toolkit/compat', name: 'sortedIndexBy' },
  sortedIndexOf: { module: 'es-toolkit/compat', name: 'sortedIndexOf' },
  sortedLastIndex: { module: 'es-toolkit/compat', name: 'sortedLastIndex' },
  sortedLastIndexBy: { module: 'es-toolkit/compat', name: 'sortedLastIndexBy' },
  sortedLastIndexOf: { module: 'es-toolkit/compat', name: 'sortedLastIndexOf' },
  split: { module: 'es-toolkit/compat', name: 'split' },
  startsWith: { module: 'es-toolkit/compat', name: 'startsWith' },
  stubArray: { module: 'es-toolkit/compat', name: 'stubArray' },
  stubFalse: { module: 'es-toolkit/compat', name: 'stubFalse' },
  stubObject: { module: 'es-toolkit/compat', name: 'stubObject' },
  stubString: { module: 'es-toolkit/compat', name: 'stubString' },
  stubTrue: { module: 'es-toolkit/compat', name: 'stubTrue' },
  subtract: { module: 'es-toolkit/compat', name: 'subtract' },
  template: { module: 'es-toolkit/compat', name: 'template' },
  templateSettings: { module: 'es-toolkit/compat', name: 'templateSettings' },
  times: { module: 'es-toolkit/compat', name: 'times' },
  toArray: { module: 'es-toolkit/compat', name: 'toArray' },
  toDefaulted: { module: 'es-toolkit/compat', name: 'toDefaulted' },
  toFinite: { module: 'es-toolkit/compat', name: 'toFinite' },
  toInteger: { module: 'es-toolkit/compat', name: 'toInteger' },
  toLength: { module: 'es-toolkit/compat', name: 'toLength' },
  toLower: { module: 'es-toolkit/compat', name: 'toLower' },
  toNumber: { module: 'es-toolkit/compat', name: 'toNumber' },
  toPairs: { module: 'es-toolkit/compat', name: 'toPairs' },
  toPairsIn: { module: 'es-toolkit/compat', name: 'toPairsIn' },
  toPath: { module: 'es-toolkit/compat', name: 'toPath' },
  toPlainObject: { module: 'es-toolkit/compat', name: 'toPlainObject' },
  toSafeInteger: { module: 'es-toolkit/compat', name: 'toSafeInteger' },
  toString: { module: 'es-toolkit/compat', name: 'toString' },
  toUpper: { module: 'es-toolkit/compat', name: 'toUpper' },
  transform: { module: 'es-toolkit/compat', name: 'transform' },
  uniqueId: { module: 'es-toolkit/compat', name: 'uniqueId' },
  unset: { module: 'es-toolkit/compat', name: 'unset' },
  update: { module: 'es-toolkit/compat', name: 'update' },
  updateWith: { module: 'es-toolkit/compat', name: 'updateWith' },
  values: { module: 'es-toolkit/compat', name: 'values' },
  valuesIn: { module: 'es-toolkit/compat', name: 'valuesIn' },
  wrap: { module: 'es-toolkit/compat', name: 'wrap' },
  zipObjectDeep: { module: 'es-toolkit/compat', name: 'zipObjectDeep' },
} as CompatibilityMapping;
